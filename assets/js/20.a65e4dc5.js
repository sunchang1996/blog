(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{341:function(t,a,e){"use strict";e.r(a);var s=e(34),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"堆是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#堆是什么"}},[t._v("#")]),t._v(" 堆是什么")]),t._v(" "),e("p",[t._v("堆是一个特殊的“完全二叉树”")]),t._v(" "),e("ul",[e("li",[t._v("所有的节点都大于等于（最大堆）或小于等于（最小堆）它的子节点")])]),t._v(" "),e("h3",{attrs:{id:"特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),e("ul",[e("li",[t._v("JS 中通常使用数组表示堆")]),t._v(" "),e("li",[t._v("任意节点的左侧子节点位置是 2 * index + 1")]),t._v(" "),e("li",[t._v("任意节点的右侧子节点位置是 2 * index + 2")]),t._v(" "),e("li",[t._v("父节点位置是（index - 1）/ 2")])]),t._v(" "),e("h3",{attrs:{id:"堆的应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#堆的应用"}},[t._v("#")]),t._v(" 堆的应用")]),t._v(" "),e("ol",[e("li",[t._v("堆能高效、快速地找出最大值和最小值。时间复杂度：O(1)")]),t._v(" "),e("li",[t._v("找出第 K 个最大元素或最小元素")])])])}),[],!1,null,null,null);a.default=r.exports}}]);