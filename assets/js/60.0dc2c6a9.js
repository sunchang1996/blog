(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{379:function(s,n,a){"use strict";a.r(n);var e=a(34),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"电话号码的字母组合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#电话号码的字母组合"}},[s._v("#")]),s._v(" 电话号码的字母组合")]),s._v(" "),a("p",[s._v("给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。")]),s._v(" "),a("p",[s._v("给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。")]),s._v(" "),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/13129256-f8771db06bac4b36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",art:""}}),s._v(" "),a("p",[s._v('示例:\n输入："23"\n输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].\n说明:\n尽管上面的答案是按字典序排列的，但是你可以任意选择答案输出的顺序。')]),s._v(" "),a("p",[s._v("来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number")]),s._v(" "),a("p",[s._v("思路：")]),s._v(" "),a("ol",[a("li",[s._v("首先要存储每个按键所代表的字母")]),s._v(" "),a("li",[s._v("根据输入的数字，找出数字所对应的 字母")]),s._v(" "),a("li",[s._v("循环递归获取拼接后的字母组合")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 简单的方式，用数组的索引代表每个键盘的字母\nfunction mergeLetters(str) {\n  // 简单的方式，用数组的索引代表每个键盘的字母\n  let map = ['', 1, 'abc', 'def', 'ghi', 'jkl', 'mno', 'pqrs', 'tuv', 'wxyz']\n\n  // 输入的数字，转成数组， 输入字符串分割成数组，234 => [2,3,4]\n  const mumber = str.split('')\n\n  // 根据 number 映射 map 的值\n  const code = []\n  mumber.forEach(m => {\n    if (map[m]) {\n      code.push(map[m])\n    }\n  })\n\n  const merge = (ary) => {\n    // 临时变量，用来保存 递归后的结果\n    let temAry = []\n\n    for (let i = 0; i < ary[0].length; i++) {\n      const cur = ary[0][i];\n      for (let j = 0; j < ary[1].length; j++) {\n        const cur2 = ary[1][j];\n        temAry.push(`${cur}${cur2}`)\n      }\n    }\n    // 替换数组，把数组前两位，替换成 temAry\n    ary.splice(0, 2, temAry)\n\n    if(ary.length > 1) {\n      merge(ary)\n      console.log(ary)\n    } else {\n      return temAry\n    }\n    // 返回最后的结果，因为最后只有一个元素\n    return ary[0]\n  }\n  return merge(code)\n}\nconst result = mergeLetters('234')\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br")])]),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/13129256-2fcccad9c120ffb3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",art:""}})])}),[],!1,null,null,null);n.default=t.exports}}]);