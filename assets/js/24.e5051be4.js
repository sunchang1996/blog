(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{345:function(t,a,s){"use strict";s.r(a);var e=s(34),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"回溯算法是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回溯算法是什么"}},[t._v("#")]),t._v(" 回溯算法是什么")]),t._v(" "),s("p",[t._v("回溯算法是“算法设计”中的一种方法\n回溯算法是一种 “渐进式” 寻找并构建问题解决方式的策略\n回溯算法会先从一个可能的动作开始解决问题，如果不行，就回回溯并选择另一个动作，直到将问题解决。")]),t._v(" "),s("h2",{attrs:{id:"什么问题适合用回溯算法解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么问题适合用回溯算法解决"}},[t._v("#")]),t._v(" 什么问题适合用回溯算法解决")]),t._v(" "),s("ol",[s("li",[t._v("有很多路，很多选择")]),t._v(" "),s("li",[t._v("这些路里，有死路，也有出路")]),t._v(" "),s("li",[t._v("使用递归")])]),t._v(" "),s("p",[t._v("如：全排列\n[1,2,3] => [[1,2,3], [1,3,2], [2,1,3]] ...")])])}),[],!1,null,null,null);a.default=r.exports}}]);